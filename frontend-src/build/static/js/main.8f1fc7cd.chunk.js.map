{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filterString","handleFilterChange","value","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Person","person","removePerson","name","number","onClick","Persons","persons","filter","toLowerCase","includes","map","key","Notification","message","status","baseStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","color","App","useState","setPersons","setFilterString","setNewName","setNewNumber","notificationMessage","setNotificationMessage","notificationStatus","setNotificationStatus","useEffect","getAllPersons","personService","allPersons","resetForm","setNotification","setTimeout","event","target","preventDefault","newPersonObject","some","window","confirm","updatedPerson","updatePerson","find","addedPerson","concat","createPerson","catch","errorMessage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f1fc7cd.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }\n","import React from 'react'\n\nconst Filter = ({ filterString, handleFilterChange }) => {\n    return (\n        <div>\n            filter shown with <input\n                value={filterString}\n                onChange={handleFilterChange} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange} />\n            </div>\n            <div>number: <input\n                value={newNumber}\n                onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, removePerson }) =>\n  <div>\n    {person.name} {person.number}\n    <button onClick={() => removePerson(person)}>\n      delete\n    </button>\n  </div>\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, filterString, removePerson}) => persons\n    .filter(person => person.name.toLowerCase().includes(filterString))\n    .map(person => <Person key={person.name} person={person} removePerson={removePerson} />)\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, status }) => {\n  const baseStyle = {\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px',\n  }\n\n  const succesStyle = () => ({ ...baseStyle, color: 'green'})\n  \n  const errorStyle = () => ({ ...baseStyle, color: 'red'})\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={status === 'success' ? succesStyle() : errorStyle()}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ filterString, setFilterString] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationStatus, setNotificationStatus] = useState(null)\n\n  useEffect(() => {\n    getAllPersons()\n  }, [])\n\n  const getAllPersons = () => {\n    personService\n      .getAll()\n      .then(allPersons => setPersons(allPersons))\n  }\n\n  const resetForm = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const setNotification = (message, status) => {\n    setNotificationMessage(message)\n    setNotificationStatus(status)\n    setTimeout(() => {\n      setNotificationMessage(null)\n      setNotificationStatus(null)\n    }, 5000)\n  }\n\n  const createPerson = newPersonObject => {\n    personService\n      .create(newPersonObject)\n      .then(addedPerson => {\n        setNotification(`Added ${addedPerson.name}`, 'success')\n        setPersons(persons.concat(addedPerson))\n        resetForm()\n      })\n  }\n\n  const updatePerson = (id, newPersonObject) => {\n    personService\n      .update(id, newPersonObject)\n      .then(updatedPerson => {\n        setNotification(`Updated ${updatedPerson.name}`, 'success')\n        setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\n        resetForm()\n      })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPersonObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const existingPerson = persons.some(person => person.name.toLowerCase() === newName.toLowerCase())\n\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personId = persons.find(person => person.name.toLowerCase() === newName.toLowerCase()).id\n        updatePerson(personId, newPersonObject)\n      }\n      return\n    }\n\n    createPerson(newPersonObject)\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}`)) {\n      personService\n        .remove(person.id)\n        .then(() => getAllPersons())\n        .catch(() => {\n          const errorMessage = `Information of ${person.name} has already been removed from the server`\n          setNotification(errorMessage, 'error')\n          getAllPersons()\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterString(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} status={notificationStatus} />\n\n      <Filter\n        filterString={filterString}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add a new</h2>      \n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterString={filterString}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}